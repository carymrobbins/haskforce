{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('KindSignatures')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('EmptyDataDecls')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('TypeOperators')
WHITE_SPACE ('  ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('UnboxedTuples')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
module ('module')
WHITE_SPACE (' ')
conidRegexp ('Kind00001')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic leftbrace ('')
type ('type')
WHITE_SPACE (' ')
conidRegexp ('Pr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
(# ('(#')
WHITE_SPACE (' ')
conidRegexp ('Int')
, (',')
WHITE_SPACE (' ')
conidRegexp ('Int')
WHITE_SPACE (' ')
#) ('#)')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
type ('type')
WHITE_SPACE (' ')
conidRegexp ('T')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('f')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
* ('*')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
* ('*')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('f')
WHITE_SPACE (' ')
conidRegexp ('Int')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
data ('data')
WHITE_SPACE (' ')
conidRegexp ('S')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
data ('data')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
Consym (':*:')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Foo')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
conidRegexp ('Int')
WHITE_SPACE (' ')
Consym (':*:')
WHITE_SPACE (' ')
conidRegexp ('Bool')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Foo')
Synthetic rightbrace ('')