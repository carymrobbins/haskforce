{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('OPTIONS_GHC')
WHITE_SPACE (' ')
PRAGMA ('-fglasgow-exts')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('ANN')
WHITE_SPACE (' ')
PRAGMA ('module')
WHITE_SPACE (' ')
PRAGMA ('(Just')
WHITE_SPACE (' ')
PRAGMA ('"A')
WHITE_SPACE (' ')
PRAGMA ('`Maybe')
WHITE_SPACE (' ')
PRAGMA ('String'')
WHITE_SPACE (' ')
PRAGMA ('annotation")')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
module ('module')
WHITE_SPACE (' ')
conidRegexp ('Pragma00001')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('ANN')
WHITE_SPACE (' ')
PRAGMA ('type')
WHITE_SPACE (' ')
PRAGMA ('Foo')
WHITE_SPACE (' ')
PRAGMA ('(Just')
WHITE_SPACE (' ')
PRAGMA ('"A')
WHITE_SPACE (' ')
PRAGMA ('`Maybe')
WHITE_SPACE (' ')
PRAGMA ('String'')
WHITE_SPACE (' ')
PRAGMA ('annotation")')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
Synthetic leftbrace ('')
data ('data')
WHITE_SPACE (' ')
conidRegexp ('Foo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Push')
WHITE_SPACE (' ')
conidRegexp ('DIM1')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
type ('type')
WHITE_SPACE (' ')
conidRegexp ('Vector')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Pull')
WHITE_SPACE (' ')
conidRegexp ('DIM1')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('DEPRECATED')
WHITE_SPACE (' ')
PRAGMA ('Vector')
WHITE_SPACE (' ')
PRAGMA ('"Use')
WHITE_SPACE (' ')
PRAGMA ('Pull')
WHITE_SPACE (' ')
PRAGMA ('instead"')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('unsafeVector')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('id')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('WARNING')
WHITE_SPACE (' ')
PRAGMA ('unsafeVector')
WHITE_SPACE (' ')
PRAGMA ('"This')
WHITE_SPACE (' ')
PRAGMA ('is')
WHITE_SPACE (' ')
PRAGMA ('unsafe;')
WHITE_SPACE (' ')
PRAGMA ('I')
WHITE_SPACE (' ')
PRAGMA ('hope')
WHITE_SPACE (' ')
PRAGMA ('you')
WHITE_SPACE (' ')
PRAGMA ('know')
WHITE_SPACE (' ')
PRAGMA ('what')
WHITE_SPACE (' ')
PRAGMA ('you're')
WHITE_SPACE (' ')
PRAGMA ('doing"')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('INLINE')
WHITE_SPACE (' ')
PRAGMA ('unsafeVector')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('safeVector')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('id')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('NOINLINE')
WHITE_SPACE (' ')
PRAGMA ('[2]')
WHITE_SPACE ('  ')
PRAGMA ('safeVector')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('safeVector2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('id')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('NOINLINE')
WHITE_SPACE (' ')
PRAGMA ('[~2]')
WHITE_SPACE (' ')
PRAGMA ('safeVector2')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('f')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
conidRegexp ('Eq')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('f')
WHITE_SPACE (' ')
integertoken ('0')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('f')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('f')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('a')
WHITE_SPACE (' ')
- ('-')
WHITE_SPACE (' ')
integertoken ('1')
) (')')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('SPECIALISE')
WHITE_SPACE (' ')
PRAGMA ('f')
WHITE_SPACE (' ')
PRAGMA ('::')
WHITE_SPACE (' ')
PRAGMA ('Int')
WHITE_SPACE (' ')
PRAGMA ('->')
WHITE_SPACE (' ')
PRAGMA ('b')
WHITE_SPACE (' ')
PRAGMA ('->')
WHITE_SPACE (' ')
PRAGMA ('b')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
comment ('-- FIXME: Waiting for https://github.com/haskell-suite/haskell-src-exts/pull/112\n')
Synthetic semicolon ('')
varidRegexp ('g')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('INLINE_CONLIKE')
WHITE_SPACE (' ')
PRAGMA ('[1]')
WHITE_SPACE (' ')
PRAGMA ('g')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('h')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('h')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('SPECIALISE')
WHITE_SPACE (' ')
PRAGMA ('INLINE')
WHITE_SPACE (' ')
PRAGMA ('[~2]')
WHITE_SPACE (' ')
PRAGMA ('h')
WHITE_SPACE (' ')
PRAGMA ('::')
WHITE_SPACE (' ')
PRAGMA ('Int')
WHITE_SPACE (' ')
PRAGMA ('->')
WHITE_SPACE (' ')
PRAGMA ('Int')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('i')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('ANN')
WHITE_SPACE (' ')
PRAGMA ('i')
WHITE_SPACE (' ')
PRAGMA ('(Just')
WHITE_SPACE (' ')
PRAGMA ('"Hello")')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('map2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('map')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('RULES')
WHITE_SPACE ('\n')
PRAGMA ('"map2/map2"')
WHITE_SPACE ('    ')
PRAGMA ('forall')
WHITE_SPACE (' ')
PRAGMA ('f')
WHITE_SPACE (' ')
PRAGMA ('g')
WHITE_SPACE (' ')
PRAGMA ('xs.')
WHITE_SPACE ('  ')
PRAGMA ('map2')
WHITE_SPACE (' ')
PRAGMA ('f')
WHITE_SPACE (' ')
PRAGMA ('(map2')
WHITE_SPACE (' ')
PRAGMA ('g')
WHITE_SPACE (' ')
PRAGMA ('xs)')
WHITE_SPACE (' ')
PRAGMA ('=')
WHITE_SPACE (' ')
PRAGMA ('map2')
WHITE_SPACE (' ')
PRAGMA ('(f.g)')
WHITE_SPACE (' ')
PRAGMA ('xs')
WHITE_SPACE ('\n ')
#-} ('#-}')
Synthetic rightbrace ('')