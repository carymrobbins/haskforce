module ('module')
WHITE_SPACE (' ')
conidRegexp ('TypeApplications00001')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic leftbrace ('')
varidRegexp ('foo')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
( ('(')
( ('(')
conidRegexp ('Maybe')
WHITE_SPACE (' ')
conidRegexp ('Int')
) (')')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('foo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('bar')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
conidRegexp ('X')
WHITE_SPACE (' ')
varidRegexp ('baz')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
varidRegexp ('spam')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('eggs')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('foo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('bar')
WHITE_SPACE (' ')
@ ('@')
_ ('_')
WHITE_SPACE (' ')
@ ('@')
conidRegexp ('X')
WHITE_SPACE (' ')
varidRegexp ('baz')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
varidRegexp ('spam')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('eggs')
Synthetic rightbrace ('')