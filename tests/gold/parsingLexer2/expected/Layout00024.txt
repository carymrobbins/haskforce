{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('RecursiveDo')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
module ('module')
WHITE_SPACE (' ')
conidRegexp ('Layout00024')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
comment ('-- https://downloads.haskell.org/~ghc/7.2.2/docs/html/users_guide/syntax-extns.html\n')
Synthetic leftbrace ('')
varidRegexp ('justOnes')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
do ('do')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
rec ('rec')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
varidRegexp ('xs')
WHITE_SPACE (' ')
<- ('<-')
WHITE_SPACE (' ')
conidRegexp ('Just')
WHITE_SPACE (' ')
( ('(')
integertoken ('1')
: (':')
varidRegexp ('xs')
) (')')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
; (';')
WHITE_SPACE (' ')
varidRegexp ('return')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('map')
WHITE_SPACE (' ')
varidRegexp ('negate')
WHITE_SPACE (' ')
varidRegexp ('xs')
) (')')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
comment ('-- Indentation-based variant of above.\n')
Synthetic semicolon ('')
varidRegexp ('justOnes'')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
rec ('rec')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('xs')
WHITE_SPACE (' ')
<- ('<-')
WHITE_SPACE (' ')
conidRegexp ('Just')
WHITE_SPACE (' ')
( ('(')
integertoken ('1')
: (':')
varidRegexp ('xs')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('return')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('map')
WHITE_SPACE (' ')
varidRegexp ('negate')
WHITE_SPACE (' ')
varidRegexp ('xs')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
comment ('-- https://github.com/carymrobbins/intellij-haskforce/issues/264\n')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('grammar')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
forall ('forall')
WHITE_SPACE (' ')
varidRegexp ('r')
WHITE_SPACE (' ')
. ('.')
WHITE_SPACE (' ')
conidRegexp ('Grammar')
WHITE_SPACE (' ')
varidRegexp ('r')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Prod')
WHITE_SPACE (' ')
varidRegexp ('r')
WHITE_SPACE (' ')
conidRegexp ('String')
WHITE_SPACE (' ')
conidRegexp ('String')
WHITE_SPACE (' ')
conidRegexp ('Sentence')
) (')')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('grammar')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
rec ('rec')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('nounPhrase')
WHITE_SPACE (' ')
<- ('<-')
WHITE_SPACE (' ')
varidRegexp ('rule')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
conidRegexp ('A_NP')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('adjective')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<*>')
WHITE_SPACE (' ')
varidRegexp ('nounPhrase')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<|>')
WHITE_SPACE (' ')
conidRegexp ('N')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('noun')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<|>')
WHITE_SPACE (' ')
conidRegexp ('D_N')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('determiner')
WHITE_SPACE (' ')
VarsymPlus ('<*>')
WHITE_SPACE (' ')
varidRegexp ('noun')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<|>')
WHITE_SPACE (' ')
conidRegexp ('A_N')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('adjective')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<*>')
WHITE_SPACE (' ')
varidRegexp ('noun')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<?>')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('noun phrase')
" ('"')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
Synthetic semicolon ('')
let ('let')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('prepPhrase')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
conidRegexp ('Prod')
WHITE_SPACE (' ')
varidRegexp ('r')
WHITE_SPACE (' ')
conidRegexp ('String')
WHITE_SPACE (' ')
conidRegexp ('String')
WHITE_SPACE (' ')
conidRegexp ('PrepPhrase')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('prepPhrase')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('P_NP')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('preposition')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<*>')
WHITE_SPACE (' ')
varidRegexp ('nounPhrase')
WHITE_SPACE (' ')
VarsymPlus ('<?>')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('prepositional phrase')
" ('"')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
Synthetic semicolon ('')
rec ('rec')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('verbPhrase')
WHITE_SPACE (' ')
<- ('<-')
WHITE_SPACE (' ')
varidRegexp ('rule')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
conidRegexp ('V_NP')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('verb')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<*>')
WHITE_SPACE (' ')
varidRegexp ('nounPhrase')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<|>')
WHITE_SPACE (' ')
conidRegexp ('VP_PP')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('verbPhrase')
WHITE_SPACE (' ')
VarsymPlus ('<*>')
WHITE_SPACE (' ')
varidRegexp ('prepPhrase')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<|>')
WHITE_SPACE (' ')
conidRegexp ('V')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<$>')
WHITE_SPACE (' ')
varidRegexp ('verb')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
VarsymPlus ('<?>')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('verb phrase')
" ('"')
Synthetic rightbrace ('')
Synthetic rightbrace ('')
Synthetic rightbrace ('')