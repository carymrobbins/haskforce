{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('Arrows')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('RankNTypes')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('UnicodeSyntax')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
module ('module')
WHITE_SPACE (' ')
conidRegexp ('Unicode00001')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic leftbrace ('')
import ('import')
WHITE_SPACE (' ')
conidRegexp ('Control')
. ('.')
conidRegexp ('Arrow')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
conidRegexp ('Control')
. ('.')
conidRegexp ('Monad')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
qualified ('qualified')
WHITE_SPACE (' ')
conidRegexp ('Control')
. ('.')
conidRegexp ('Category')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
conidRegexp ('Cat')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
conidRegexp ('Data')
. ('.')
conidRegexp ('List')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
conidRegexp ('Data')
. ('.')
conidRegexp ('Maybe')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
conidRegexp ('System')
. ('.')
conidRegexp ('Random')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('map'')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
BAD_CHARACTER ('∀')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
. ('.')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
varidRegexp ('b')
) (')')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('a')
] (']')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('b')
] (']')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('map'')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('map')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
newtype ('newtype')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
varidRegexp ('unCircuit')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
, (',')
WHITE_SPACE (' ')
varidRegexp ('b')
) (')')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
instance ('instance')
WHITE_SPACE (' ')
conidRegexp ('Cat')
. ('.')
conidRegexp ('Category')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('id')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Cat')
. ('.')
varidRegexp ('id')
, (',')
WHITE_SPACE (' ')
varidRegexp ('a')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
( ('(')
. ('.')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('dot')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
( ('(')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('cir2')
) (')')
WHITE_SPACE (' ')
` ('`')
varidRegexp ('dot')
` ('`')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('cir1')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
let ('let')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
( ('(')
varidRegexp ('cir1'')
, (',')
WHITE_SPACE (' ')
varidRegexp ('b')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('cir1')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
( ('(')
varidRegexp ('cir2'')
, (',')
WHITE_SPACE (' ')
varidRegexp ('c')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('cir2')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
in ('in')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('cir2'')
WHITE_SPACE (' ')
` ('`')
varidRegexp ('dot')
` ('`')
WHITE_SPACE (' ')
varidRegexp ('cir1'')
, (',')
WHITE_SPACE (' ')
varidRegexp ('c')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic rightbrace ('')
Synthetic rightbrace ('')
Synthetic semicolon ('')
instance ('instance')
WHITE_SPACE (' ')
conidRegexp ('Arrow')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('arr')
WHITE_SPACE (' ')
varidRegexp ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('arr')
WHITE_SPACE (' ')
varidRegexp ('f')
, (',')
WHITE_SPACE (' ')
varidRegexp ('f')
WHITE_SPACE (' ')
varidRegexp ('a')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('first')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
( ('(')
varidRegexp ('b')
, (',')
WHITE_SPACE (' ')
varidRegexp ('d')
) (')')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
let ('let')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
( ('(')
varidRegexp ('cir'')
, (',')
WHITE_SPACE (' ')
varidRegexp ('c')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
in ('in')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('first')
WHITE_SPACE (' ')
varidRegexp ('cir'')
, (',')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('c')
, (',')
WHITE_SPACE (' ')
varidRegexp ('d')
) (')')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('a')
] (']')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('b')
] (']')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
_ ('_')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
[ ('[')
] (']')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
] (']')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('x')
: (':')
varidRegexp ('xs')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
let ('let')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
( ('(')
varidRegexp ('cir'')
, (',')
varidRegexp ('x'')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('unCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
in ('in')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
varidRegexp ('x'')
WHITE_SPACE (' ')
: (':')
WHITE_SPACE (' ')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir'')
WHITE_SPACE (' ')
varidRegexp ('xs')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('a')
] (']')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('b')
] (']')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('inputs')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
varidRegexp ('snd')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
varidRegexp ('mapAccumL')
WHITE_SPACE (' ')
( ('(')
\ ('\')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
varidRegexp ('unCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('x')
) (')')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('inputs')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('a')
] (']')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('b')
] (']')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('runCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('inputs')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('snd')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
varidRegexp ('mapAccumL')
WHITE_SPACE (' ')
varidRegexp ('unCircuit')
WHITE_SPACE (' ')
varidRegexp ('cir')
WHITE_SPACE (' ')
varidRegexp ('inputs')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
haddock ('-- | Accumulator that outputs a value determined by the supplied function.\n')
Synthetic semicolon ('')
varidRegexp ('accum')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('b')
, (',')
WHITE_SPACE (' ')
varidRegexp ('acc')
) (')')
) (')')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('accum')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE (' ')
varidRegexp ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
varidRegexp ('input')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
let ('let')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
( ('(')
varidRegexp ('output')
, (',')
WHITE_SPACE (' ')
varidRegexp ('acc'')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('input')
WHITE_SPACE (' ')
` ('`')
varidRegexp ('f')
` ('`')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
in ('in')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('accum')
WHITE_SPACE (' ')
varidRegexp ('acc'')
WHITE_SPACE (' ')
varidRegexp ('f')
, (',')
WHITE_SPACE (' ')
varidRegexp ('output')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
haddock ('-- | Accumulator that outputs the accumulator value.\n')
Synthetic semicolon ('')
varidRegexp ('accum'')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
varidRegexp ('b')
) (')')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('accum'')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE (' ')
varidRegexp ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('accum')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE (' ')
( ('(')
\ ('\')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
let ('let')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('b'')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
` ('`')
varidRegexp ('f')
` ('`')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE (' ')
Synthetic rightbrace ('')
in ('in')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('b'')
, (',')
WHITE_SPACE (' ')
varidRegexp ('b'')
) (')')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('total')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Num')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('⇒')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('total')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('accum'')
WHITE_SPACE (' ')
integertoken ('0')
WHITE_SPACE (' ')
( ('(')
+ ('+')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('mean1')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Fractional')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('⇒')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('mean1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('total')
WHITE_SPACE (' ')
VarsymPlus ('&&&')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('const')
WHITE_SPACE (' ')
integertoken ('1')
WHITE_SPACE (' ')
VarsymPlus ('^>>')
WHITE_SPACE (' ')
varidRegexp ('total')
) (')')
) (')')
WHITE_SPACE (' ')
VarsymPlus ('>>>')
WHITE_SPACE (' ')
varidRegexp ('arr')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('uncurry')
WHITE_SPACE (' ')
( ('(')
/ ('/')
) (')')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('mean2')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Fractional')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('⇒')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('mean2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('proc')
WHITE_SPACE (' ')
varidRegexp ('value')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('t')
WHITE_SPACE (' ')
BAD_CHARACTER ('←')
WHITE_SPACE (' ')
varidRegexp ('total')
WHITE_SPACE (' ')
BAD_CHARACTER ('↢')
WHITE_SPACE (' ')
varidRegexp ('value')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('n')
WHITE_SPACE (' ')
BAD_CHARACTER ('←')
WHITE_SPACE (' ')
varidRegexp ('total')
WHITE_SPACE (' ')
BAD_CHARACTER ('↢')
WHITE_SPACE (' ')
integertoken ('1')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('returnA')
WHITE_SPACE (' ')
BAD_CHARACTER ('↢')
WHITE_SPACE (' ')
varidRegexp ('t')
WHITE_SPACE (' ')
/ ('/')
WHITE_SPACE (' ')
varidRegexp ('n')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('generator')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('Random')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
BAD_CHARACTER ('⇒')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('a')
, (',')
WHITE_SPACE (' ')
varidRegexp ('a')
) (')')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
conidRegexp ('StdGen')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
conidRegexp ('()')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('generator')
WHITE_SPACE (' ')
varidRegexp ('range')
WHITE_SPACE (' ')
varidRegexp ('rng')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('accum')
WHITE_SPACE (' ')
varidRegexp ('rng')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
\ ('\')
conidRegexp ('()')
WHITE_SPACE (' ')
varidRegexp ('rng')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
varidRegexp ('randomR')
WHITE_SPACE (' ')
varidRegexp ('range')
WHITE_SPACE (' ')
varidRegexp ('rng')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('dictionary')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
" ('"')
STRINGTOKEN ('dog')
" ('"')
, (',')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('cat')
" ('"')
, (',')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('bird')
" ('"')
] (']')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('pickWord')
WHITE_SPACE (' ')
BAD_CHARACTER ('∷')
WHITE_SPACE (' ')
conidRegexp ('StdGen')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
conidRegexp ('Circuit')
WHITE_SPACE (' ')
conidRegexp ('()')
WHITE_SPACE (' ')
conidRegexp ('String')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('pickWord')
WHITE_SPACE (' ')
varidRegexp ('rng')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('proc')
WHITE_SPACE (' ')
conidRegexp ('()')
WHITE_SPACE (' ')
BAD_CHARACTER ('→')
WHITE_SPACE (' ')
do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('idx')
WHITE_SPACE (' ')
BAD_CHARACTER ('←')
WHITE_SPACE (' ')
varidRegexp ('generator')
WHITE_SPACE (' ')
( ('(')
integertoken ('0')
, (',')
WHITE_SPACE (' ')
varidRegexp ('length')
WHITE_SPACE (' ')
varidRegexp ('dictionary')
- ('-')
integertoken ('1')
) (')')
WHITE_SPACE (' ')
varidRegexp ('rng')
WHITE_SPACE (' ')
BAD_CHARACTER ('↢')
WHITE_SPACE (' ')
conidRegexp ('()')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('returnA')
WHITE_SPACE (' ')
BAD_CHARACTER ('↢')
WHITE_SPACE (' ')
varidRegexp ('dictionary')
WHITE_SPACE (' ')
VarsymPlus ('!!')
WHITE_SPACE (' ')
varidRegexp ('idx')
Synthetic rightbrace ('')
Synthetic rightbrace ('')