module ('module')
WHITE_SPACE (' ')
conidRegexp ('Import00002')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic leftbrace ('')
import ('import')
WHITE_SPACE (' ')
qualified ('qualified')
WHITE_SPACE (' ')
conidRegexp ('Prelude')
WHITE_SPACE (' ')
hiding ('hiding')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('zipWith')
, (',')
WHITE_SPACE (' ')
varidRegexp ('head')
) (')')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
conidRegexp ('Data')
. ('.')
conidRegexp ('Maybe')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('fromMaybe')
, (',')
WHITE_SPACE (' ')
varidRegexp ('isJust')
) (')')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
qualified ('qualified')
WHITE_SPACE (' ')
conidRegexp ('Data')
. ('.')
conidRegexp ('Maybe')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Maybe')
( ('(')
.. ('..')
) (')')
) (')')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
import ('import')
WHITE_SPACE (' ')
qualified ('qualified')
WHITE_SPACE (' ')
conidRegexp ('Prelude')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
conidRegexp ('P')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
data ('data')
WHITE_SPACE (' ')
conidRegexp ('Maybe2')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('Just2')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
conidRegexp ('Nothing2')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('dropBitMask')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
conidRegexp ('ByteString')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
conidRegexp ('ByteString')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('dropBitMask')
WHITE_SPACE (' ')
varidRegexp ('xs')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('go')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('B')
. ('.')
varidRegexp ('breakSubstring')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('here')
" ('"')
WHITE_SPACE (' ')
varidRegexp ('xs')
) (')')
WHITE_SPACE (' ')
[ ('[')
] (']')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('comma')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
varidRegexp ('pack')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN (',')
" ('"')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('rparen')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
varidRegexp ('pack')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN (')')
" ('"')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
varidRegexp ('go')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('h')
, (',')
WHITE_SPACE (' ')
varidRegexp ('t')
) (')')
WHITE_SPACE (' ')
varidRegexp ('acc')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
varidRegexp ('null')
WHITE_SPACE (' ')
varidRegexp ('t')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
varidRegexp ('append')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('B')
. ('.')
varidRegexp ('concat')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
varidRegexp ('reverse')
WHITE_SPACE (' ')
varidRegexp ('acc')
) (')')
WHITE_SPACE (' ')
varidRegexp ('h')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
varidRegexp ('otherwise')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('go')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('B')
. ('.')
varidRegexp ('breakSubstring')
WHITE_SPACE (' ')
varidRegexp ('wrd')
WHITE_SPACE (' ')
varidRegexp ('rest')
) (')')
WHITE_SPACE (' ')
( ('(')
varidRegexp ('rparen')
: (':')
as ('as')
: (':')
varidRegexp ('wrd')
: (':')
varidRegexp ('h')
: (':')
varidRegexp ('acc')
) (')')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
( ('(')
as ('as')
, (',')
WHITE_SPACE (' ')
varidRegexp ('rest')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('fixArg')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('B')
. ('.')
varidRegexp ('span')
WHITE_SPACE (' ')
( ('(')
VarsymPlus ('/=')
WHITE_SPACE (' ')
chartoken ('';'')
) (')')
WHITE_SPACE (' ')
$ ('$')
WHITE_SPACE (' ')
conidRegexp ('B')
. ('.')
varidRegexp ('drop')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('B')
. ('.')
varidRegexp ('length')
WHITE_SPACE (' ')
varidRegexp ('wrd')
) (')')
WHITE_SPACE (' ')
varidRegexp ('t')
) (')')
Synthetic rightbrace ('')
Synthetic rightbrace ('')
Synthetic rightbrace ('')