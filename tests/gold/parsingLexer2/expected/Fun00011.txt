{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('LambdaCase')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('MultiWayIf')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('RecursiveDo')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('ImplicitParams')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
{-# ('{-#')
WHITE_SPACE (' ')
PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
PRAGMA ('DataKinds')
WHITE_SPACE (' ')
#-} ('#-}')
WHITE_SPACE ('\n')
module ('module')
WHITE_SPACE (' ')
conidRegexp ('Fun00011')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic leftbrace ('')
data ('data')
WHITE_SPACE (' ')
conidRegexp ('ICon')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
Consym (':>')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('f')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
[ ('[')
] (']')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
conidRegexp ('()')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('undefined')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('g')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
( ('(')
-> ('->')
) (')')
WHITE_SPACE (' ')
varidRegexp ('b')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('g')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('foo')
WHITE_SPACE (' ')
VarsymPlus ('>>=')
WHITE_SPACE (' ')
\case ('\case')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
conidRegexp ('Just')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
Synthetic semicolon ('')
conidRegexp ('Nothing')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
integertoken ('12')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
{- ('{-')
commenttext (' FIXME: Add support for MultiWayIf.\nh = if | True ')
commenttext ('-')
commenttext ('> 12\n       | False ')
commenttext ('-')
commenttext ('> 9\n')
-} ('-}')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('i')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
mdo ('mdo')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
integertoken ('7')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('sort')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
( ('(')
? ('?')
varidRegexp ('cmp')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
varidRegexp ('a')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
conidRegexp ('Bool')
) (')')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('a')
] (']')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
[ ('[')
varidRegexp ('a')
] (']')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('sort')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('sortBy')
WHITE_SPACE (' ')
? ('?')
varidRegexp ('cmp')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('clearPage')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
conidRegexp ('ArrPtr')
WHITE_SPACE (' ')
integertoken ('4096')
WHITE_SPACE (' ')
conidRegexp ('Word8')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
conidRegexp ('IO')
WHITE_SPACE (' ')
conidRegexp ('()')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
varidRegexp ('clearPage')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('ArrPtr')
WHITE_SPACE (' ')
varidRegexp ('p')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('undefined')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic semicolon ('')
instance ('instance')
WHITE_SPACE (' ')
conidRegexp ('Has')
WHITE_SPACE (' ')
conidRegexp ('Point')
WHITE_SPACE (' ')
" ('"')
STRINGTOKEN ('x')
" ('"')
WHITE_SPACE (' ')
conidRegexp ('Int')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE (' ')
Synthetic leftbrace ('')
varidRegexp ('from')
WHITE_SPACE (' ')
( ('(')
conidRegexp ('Point')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE (' ')
_ ('_')
) (')')
WHITE_SPACE (' ')
_ ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('x')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
Synthetic rightbrace ('')
Synthetic semicolon ('')
varidRegexp ('y1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
varidRegexp ('undefined')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
conidRegexp ('Y')
WHITE_SPACE (' ')
' (''')
conidRegexp ('()')
Synthetic rightbrace ('')