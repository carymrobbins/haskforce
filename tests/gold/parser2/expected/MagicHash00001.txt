HASKELL_FILE
  PRAGMA_EXPR
    PsiElement({-#)('{-#')
    PsiElement(PRAGMA)('LANGUAGE')
    PRAGMA_LANGS
      PsiErrorElement:Expected language extension name
        <empty list>
    PsiErrorElement:Expected #-}
      <empty list>
  BODY
    UNKNOWN
      PsiElement(PRAGMA)('MagicHash')
      PsiElement(#-})('#-}')
    UNKNOWN
      PsiElement(module)('module')
      PsiElement(conidRegexp)('MagicHash00001')
      PsiElement(where)('where')
    PsiComment(comment)('-- Ripped from Data.List, verify I# constructor is valid.\n')
    UNKNOWN
      <empty list>
    UNKNOWN
      PsiElement(varidRegexp)('findIndices')
      PsiElement(::)('::')
      PsiElement(()('(')
      PsiElement(varidRegexp)('a')
      PsiElement(->)('->')
      PsiElement(conidRegexp)('Bool')
      PsiElement())(')')
      PsiElement(->)('->')
      PsiElement([)('[')
      PsiElement(varidRegexp)('a')
      PsiElement(])(']')
      PsiElement(->)('->')
      PsiElement([)('[')
      PsiElement(conidRegexp)('Int')
      PsiElement(])(']')
    PsiComment(CPPIFDEF)('#ifdef USE_REPORT_PRELUDE')
    UNKNOWN
      <empty list>
    UNKNOWN
      PsiElement(varidRegexp)('findIndices')
      PsiElement(varidRegexp)('p')
      PsiElement(varidRegexp)('xs')
      PsiElement(=)('=')
      PsiElement([)('[')
      PsiElement(varidRegexp)('i')
      PsiElement(|)('|')
      PsiElement(()('(')
      PsiElement(varidRegexp)('x')
      PsiElement(,)(',')
      PsiElement(varidRegexp)('i')
      PsiElement())(')')
      PsiElement(<-)('<-')
      PsiElement(varidRegexp)('zip')
      PsiElement(varidRegexp)('xs')
      PsiElement([)('[')
      PsiElement(integertoken)('0')
      PsiElement(..)('..')
      PsiElement(])(']')
      PsiElement(,)(',')
      PsiElement(varidRegexp)('p')
      PsiElement(varidRegexp)('x')
      PsiElement(])(']')
    PsiComment(#else)('#else')
    PsiComment(comment)('-- Efficient definition\n')
    UNKNOWN
      <empty list>
    UNKNOWN
      PsiElement(varidRegexp)('findIndices')
      PsiElement(varidRegexp)('p')
      PsiElement(varidRegexp)('ls')
      PsiElement(=)('=')
      PsiElement(varidRegexp)('loop')
      PsiElement(integertoken)('0#')
      PsiElement(varidRegexp)('ls')
      PsiElement(where)('where')
      PsiElement(varidRegexp)('loop')
      PsiElement(_)('_')
      PsiElement([)('[')
      PsiElement(])(']')
      PsiElement(=)('=')
      PsiElement([)('[')
      PsiElement(])(']')
      PsiElement(varidRegexp)('loop')
      PsiElement(varidRegexp)('n')
      PsiElement(()('(')
      PsiElement(varidRegexp)('x')
      PsiElement(:)(':')
      PsiElement(varidRegexp)('xs')
      PsiElement())(')')
      PsiElement(|)('|')
      PsiElement(varidRegexp)('p')
      PsiElement(varidRegexp)('x')
      PsiElement(=)('=')
      PsiElement(conidRegexp)('I')
      PsiElement(#)('#')
      PsiElement(varidRegexp)('n')
      PsiElement(:)(':')
      PsiElement(varidRegexp)('loop')
      PsiElement(()('(')
      PsiElement(varidRegexp)('n')
      PsiElement(VarsymPlus)('+#')
      PsiElement(integertoken)('1#')
      PsiElement())(')')
      PsiElement(varidRegexp)('xs')
      PsiElement(|)('|')
      PsiElement(varidRegexp)('otherwise')
      PsiElement(=)('=')
      PsiElement(varidRegexp)('loop')
      PsiElement(()('(')
      PsiElement(varidRegexp)('n')
      PsiElement(VarsymPlus)('+#')
      PsiElement(integertoken)('1#')
      PsiElement())(')')
      PsiElement(varidRegexp)('xs')
      PsiComment(#endif)('#endif  /* USE_REPORT_PRELUDE */')